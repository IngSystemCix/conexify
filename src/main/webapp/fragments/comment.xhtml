<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="jakarta.faces.facelets"
                xmlns:h="jakarta.faces.html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="jakarta.faces.core"
                xmlns:c="jakarta.tags.core">

  <!-- Estructura del comentario con un estilo dinámico según la profundidad del comentario -->
  <div class="mt-1 p-3 border-round-md flex flex-column" style="margin-left: #{(depth
   * 0.25) + 0.25}rem;">
    <div class="relative flex flex-column bg-gray-100" style="border-left: 2px solid
    ${commentsPostBean.getColorBorder(currentComment.username)}; padding-left: 1rem; border-radius: 0 0 0 0.5rem;">
      <div class="flex align-items-center gap-2 mt-2">
        <p:avatar label="#{currentComment.username}" dynamicColor="true" size="small" shape="circle" />
        <div class="flex flex-column">
          <!-- Nombre de usuario con estilo condicional según la profundidad -->
          <h:outputText value="#{currentComment.username}" styleClass="font-bold text-#{depth gt 0 ? 'xs' : 'sm'}" />
          <span class="text-xs text-gray-500">
          <!-- Muestra la fecha del comentario en formato legible -->
            <h:outputText value="#{currentComment.date.toString().replace('T',' ')}" />
        </span>
        </div>
      </div>

      <!-- Muestra el contenido del comentario, con un tamaño de texto ajustado a la profundidad -->
      <h:panelGroup rendered="#{not currentComment.editingByUser}">
        <h:outputText value="#{currentComment.text}" styleClass="mt-2 text-#{depth gt 0 ? 'xs' : 'sm'}" escape="false" />
      </h:panelGroup>

      <h:panelGroup rendered="#{currentComment.editingByUser}" styleClass="mt-2 w-full flex flex-column gap-2 mr-2">
        <p:inputTextarea value="#{currentComment.text}" rows="1" autoResize="true" scrollHeight="100"
                         styleClass="w-full"
                         style="overflow: auto;" />
        <div class="w-full flex gap-2">
          <p:commandButton value="#{msg['label_save']}" icon="bi bi-check"
                           actionListener="#{commentsPostBean.updateComment(currentComment.text)}"
                           update="@form" />
          <p:commandButton value="#{msg['label_cancel']}" icon="bi bi-x"
                           actionListener="#{commentsPostBean.cancelEdit()}"
                           update="@form" styleClass="ui-button-danger" />
        </div>
      </h:panelGroup>


      <div class="flex justify-content-start align-items-center gap-2 mt-1">
        <div>
          <p:tooltip for="like_comment_#{currentComment.id}"
                     value="#{dataScrollerPostBean.convertNumberToWords(currentComment.likes)} #{msg['label_like']}"
                     position="top" />
          <p:commandButton id="like_comment_#{currentComment.id}"
                           icon="#{currentComment.likedCommentsByUser ? 'bi bi-hand-thumbs-up-fill' : 'bi bi-hand-thumbs-up'}"
                           styleClass="ui-button-flat"
                           value="#{dataScrollerPostBean.converterAmountLikes(currentComment.likes)}"
                           action="#{commentsPostBean.likeComment(currentComment.id)}"
                           update="@form" />
        </div>
        <div>
          <p:tooltip for="comment_#{currentComment.id}"
                     value="#{currentComment.comments.size() eq 0 or currentComment.comments.size() eq null ?
                     msg['label_no_comments'] :
                     dataScrollerPostBean.convertNumberToWords(currentComment.comments.size()).concat(' ').concat(msg['label_comment'])}"
                     position="top" />
          <p:commandButton id="comment_#{currentComment.id}" icon="bi bi-chat-left" styleClass="ui-button-flat"
                            value="#{currentComment.comments.size()} #{msg['label_comment']}"
          />
        </div>
        <div>
          <p:commandButton icon="bi bi-reply" styleClass="ui-button-flat" value="#{msg['label_reply']}"
                           action="#{commentsPostBean.showInputComment(currentComment.id)}" update="@form" />
        </div>
      </div>

      <p:commandButton id="actionOptionComment#{currentComment.id}" icon="bi bi-three-dots"
                       styleClass="ui-button-flat absolute" style="top: .5rem; right: .5rem;"
                       rendered="#{'Juan Romero' eq currentComment.username}"
                       actionListener="#{commentsPostBean.setCommentIdByUser(currentComment)}"
      />

      <p:overlayPanel for="actionOptionComment#{currentComment.id}" showEffect="fade" hideEffect="fade" dynamic="true">
        <div class="flex flex-column">
          <p:commandButton value="#{msg['label_delete']}" icon="bi bi-trash" styleClass="ui-button-flat"
                           update="@form">
            <p:confirm header="#{msg['label_delete']}" message="#{msg['label_confirm_delete_comment']}"
                       icon="bi bi-exclamation-triangle" />
          </p:commandButton>
          <p:commandButton value="#{msg['label_edit']}" icon="bi bi-pencil" styleClass="ui-button-flat"
                           actionListener="#{commentsPostBean.showEditInputComment()}"
                            update="@form"
          />
        </div>
      </p:overlayPanel>

      <p:confirmDialog global="true" showEffect="fade" hideEffect="fade"
                       message="#{msg['label_confirm_delete_comment']}" header="#{msg['label_delete']}"
                       severity="alert" widgetVar="confirmDeleteComment_#{currentComment.id}">
        <p:commandButton value="#{msg['label_yes']}" styleClass="p-button-danger"
                         icon="bi bi-check"
                         actionListener="#{commentsPostBean.deleteComment}"
                         update="@form"
                         onclick="PF('confirmDeleteComment_#{currentComment.id}').hide();"/>
        <p:commandButton value="#{msg['label_no']}" styleClass="p-button-secondary"
                         icon="bi bi-x"
                         onclick="PF('confirmDeleteComment_#{currentComment.id}').hide();" />
      </p:confirmDialog>
    </div>

    <!-- Mostrar el textarea si replyByUser es true -->
    <h:panelGroup rendered="#{currentComment.replyByUser}" styleClass="mt-2 w-full flex px-3">
      <p:inputTextarea value="#{currentComment.textReply}" rows="1" cols="33" autoResize="true" styleClass="w-full"
                       style="overflow: auto; border-left: 2px solid ${commentsPostBean.getColorBorder(currentComment.username)};" scrollHeight="100" placeholder="#{msg['label_reply_comment']}" />
      <p:commandButton icon="bi bi-send" action="#{commentsPostBean.replyComment(currentComment.id,
      currentComment.getTextReply())}" update="@form" />
    </h:panelGroup>

      <!-- Itera sobre los subcomentarios (respuestas) y muestra cada uno de manera anidada -->
      <c:forEach var="reply" items="#{currentComment.comments}" varStatus="status"
                 begin="0" end="#{dataScrollerPostBean.countTotalComments(currentComment.comments)}">
        <ui:include src="/fragments/comment.xhtml">
          <!-- Pasa el subcomentario actual y aumenta la profundidad -->
          <ui:param name="currentComment" value="#{reply}" />
          <ui:param name="depth" value="#{depth + 1}" />
        </ui:include>
      </c:forEach>
  </div>

</ui:composition>
